  172  net.ipv6.conf.all.disable_ipv6 = 1
  173  net.ipv6.conf.default.disable_ipv6 = 1
  174  net.ipv6.conf.lo.disable_ipv6 = 1

  ping6 -c 4 2001:4860:4860::8888  # DNS IPv6 do Google


  tailwind: tskey-auth-kesGtd8Agk11CNTRL-bZMWtZPW1pfqQDvZVcZmpfuGd6jGsTsN6

  Wrote public cert to linux.taile65a90.ts.net.crt
Wrote private key to linux.taile65a90.ts.net.key


postgresql

1. Gerar um Certificado e uma Chave Autoassinados
Se você não possui um certificado emitido por uma autoridade certificadora e está em ambiente de testes, pode gerar um certificado autoassinado:

Navegue até o diretório de certificados (por exemplo, /etc/ssl/certs):

bash
Copy
Edit
cd /etc/ssl/certs
Gere o certificado e a chave com o OpenSSL:

bash
Copy
Edit
sudo openssl req -new -x509 -days 365 -nodes -out server.crt -keyout server.key
Durante o processo, preencha as informações solicitadas (para testes, os valores podem ser genéricos).
Ajuste as permissões:

Altere a propriedade para o usuário postgres:
bash
Copy
Edit
sudo chown postgres:postgres server.crt server.key
Defina permissões seguras para a chave:
bash
Copy
Edit
sudo chmod 600 server.key
2. Configurar o PostgreSQL para Usar os Arquivos Gerados
Abra o arquivo de configuração do PostgreSQL:
bash
Copy
Edit
sudo nano /etc/postgresql/16/main/postgresql.conf
Localize e ajuste as seguintes linhas para apontar para os arquivos gerados:
conf
Copy
Edit
ssl = on
ssl_cert_file = '/etc/ssl/certs/server.crt'
ssl_key_file = '/etc/ssl/certs/server.key'
Salve as alterações e saia do editor.
3. Reiniciar o Cluster PostgreSQL
Reinicie o cluster para aplicar as alterações:

bash
Copy
Edit
sudo pg_ctlcluster 16 main restart
Após reiniciar, verifique se o cluster está ativo com:

bash


Edit
sudo pg_lsclusters
E confirme que o socket foi criado em /var/run/postgresql/ ou que você consegue conectar via TCP:

bash


Edit
psql -h localhost

psql -U server -d cobolbd -h localhost -p 5432

 1402  psql -U server -d cobolbd -h localhost -p 5432
 1405  psql -h localhost -U server -W
 1406  psql -h localhost -U cobolbd -W
 1407  psql -h localhost -U server cobolbd -W
 sudo -u postgres psql

  cobc -x -free -o meu_programa myprogram.cob 

  cobc -x -free -o teste teste.cob -lodbc

   1605  cobc -x -free -o teste teste.cob -L/usr/lib/x86_64-linux-gnu -lodbc -Wl,-rpath,/usr/lib/x86_64-linux-gnu
 1607  cobc -x -free -o teste teste.cob -L/usr/lib/x86_64-linux-gnu -lodbc

  export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libodbc.so

export COB_LIBRARY_PATH=$COB_LIBRARY_PATH:/srv/fulljavascript/api/teste
echo $COB_LIBRARY_PATH
:/srv/fulljavascript/api/teste


      cobc -c -free -o allocate.o allocate.cob -L/usr/lib/x86_64-linux-gnu
      cobc -x -free -o ../bin/allocate ../dev/allocate.cob -L/usr/lib/x86_64-linux-gnu -lodbc
      export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libodbc.so


      isql -v cobolbd server pwdbd123

      sudo tail -n 50 /var/log/postgresql/postgresql-*-main.log