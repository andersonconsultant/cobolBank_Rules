      ******************************************************************
      * Engine Test v4 - Log Testing Version
      ******************************************************************
         IDENTIFICATION DIVISION.
      ******************************************************************
         PROGRAM-ID.                 ENGINEV4TST.
         AUTHOR.                     DEV.
         DATE-WRITTEN.              2024-05-05.

      ******************************************************************
         ENVIRONMENT DIVISION.
      ******************************************************************
         CONFIGURATION SECTION.
         SPECIAL-NAMES.
            DECIMAL-POINT IS COMMA.

      ******************************************************************
         DATA DIVISION.
      ******************************************************************
         WORKING-STORAGE SECTION.
         
OCESQL*  EXEC SQL BEGIN DECLARE SECTION END-EXEC.
         01  DBNAME                  PIC X(30) VALUE SPACE.
         01  USERNAME                PIC X(30) VALUE SPACE.
         01  PASSWD                  PIC X(10) VALUE SPACE.
         
      *  Estrutura para dados do log
         01  WS-LOG-DATA.
             05 WS-SESSION-ID        PIC X(10).
             05 WS-COMPONENT         PIC X(10).
             05 WS-ACTION            PIC X(20).
             05 WS-STATUS            PIC X(10).
             05 WS-RESPONSE-TIME     PIC 9(6).
             05 WS-MESSAGE           PIC X(100).
             05 WS-ENDPOINT          PIC X(50).
             05 WS-METHOD            PIC X(6).
             05 WS-VALUE             PIC 9(10)V99.
         
      *  Variaveis editadas para formatacao
         01  WS-EDITED-RESPONSE     PIC Z(6) VALUE SPACES.
         01  WS-EDITED-VALUE        PIC Z(10)9,99 VALUE SPACES.
         
      *  Variaveis normalizadas para insert
         01  WS-NORM-SESSION-ID     PIC X(10).
         01  WS-NORM-COMPONENT      PIC X(10).
         01  WS-NORM-ACTION         PIC X(20).
         01  WS-NORM-STATUS         PIC X(10).
         01  WS-NORM-MESSAGE        PIC X(100).
         01  WS-NORM-ENDPOINT       PIC X(50).
         01  WS-NORM-METHOD         PIC X(6).
         
OCESQL*  EXEC SQL END DECLARE SECTION END-EXEC.

      *  Variáveis de trabalho
         01  WS-INPUT               PIC X(500) VALUE SPACES.
         01  WS-CMD                 PIC X(10) VALUE SPACE.
         01  WS-DB-STARTED          PIC X(1)  VALUE "N".
         01  WS-UNSTRING-PTR        PIC 9(2)  VALUE 1.
         01  WS-IDX                 PIC 9(2)  VALUE 1.
         
OCESQL*  EXEC SQL INCLUDE SQLCA END-EXEC.
OCESQL     copy "sqlca.cbl".

      ******************************************************************
OCESQL*
OCESQL 01  SQ0001.
OCESQL     02  FILLER PIC X(189) VALUE "INSERT INTO log_cobol_test (se"
OCESQL  &  "ssion_id, response_time, value_processed, component, actio"
OCESQL  &  "n, status, message, endpoint, method, created_at) VALUES ("
OCESQL  &  " $1, $2, $3, $4, $5, $6, $7, $8, $9, now())".
OCESQL     02  FILLER PIC X(1) VALUE X"00".
OCESQL*
OCESQL 01  SQ0002.
OCESQL     02  FILLER PIC X(014) VALUE "DISCONNECT ALL".
OCESQL     02  FILLER PIC X(1) VALUE X"00".
OCESQL*
         PROCEDURE DIVISION.
      ******************************************************************
         MAIN-RTN.
            PERFORM WAIT-CMD.
            
         MENU-HELP.
            DISPLAY "=== COMANDOS DE TESTE DE LOG ===".
            DISPLAY "START : Inicia conexao com o banco".
            DISPLAY "LOG   : Insere log (formato:)".
            DISPLAY "        id;comp;act;status;resp;msg;end;met;val".
            DISPLAY "HELP  : Mostra este menu".
            DISPLAY "EXIT  : Finaliza o programa".
            DISPLAY "================================".
            PERFORM WAIT-CMD.

         START-DB.
            MOVE "cobolbd"   TO   DBNAME
            ACCEPT USERNAME FROM ENVIRONMENT "DB_USER"
            ACCEPT PASSWD FROM ENVIRONMENT "DB_PASSWORD"
            
OCESQL*     EXEC SQL
OCESQL*        CONNECT :USERNAME IDENTIFIED BY :PASSWD USING :DBNAME 
OCESQL*     END-EXEC
OCESQL     CALL "OCESQLConnect" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE USERNAME
OCESQL          BY VALUE 30
OCESQL          BY REFERENCE PASSWD
OCESQL          BY VALUE 10
OCESQL          BY REFERENCE DBNAME
OCESQL          BY VALUE 30
OCESQL     END-CALL
            
            IF SQLCODE NOT = ZERO
               DISPLAY "0\STATUS"
               DISPLAY "#Erro ao conectar ao banco"
               DISPLAY "#SQLCODE: " SQLCODE
            ELSE
               MOVE "S" TO WS-DB-STARTED
               DISPLAY "1\STATUS"
               DISPLAY "#Conexao com o banco iniciada com sucesso"
            END-IF
            PERFORM WAIT-CMD.

         WAIT-CMD.
            DISPLAY "#Digite o comando: - Digite HELP para ajuda"
            ACCEPT WS-CMD
            
            IF WS-CMD = "START"
               IF WS-DB-STARTED = "S"
                  DISPLAY "1\STATUS"
                  DISPLAY "#Banco ja esta conectado"
                  PERFORM WAIT-CMD
               ELSE
                  PERFORM START-DB
               END-IF
            ELSE IF WS-CMD = "LOG"
               IF WS-DB-STARTED = "N"
                  DISPLAY "0\STATUS"
                  DISPLAY "#Banco nao conectado - Digite START primeiro"
                  PERFORM WAIT-CMD
               ELSE
                  PERFORM PROCESS-LOG
                  PERFORM WAIT-CMD
               END-IF
            ELSE IF WS-CMD = "HELP"
               PERFORM MENU-HELP
            ELSE IF WS-CMD = "EXIT" OR WS-CMD = "QUIT"
               PERFORM FIM-PROGRAMA
            ELSE
               DISPLAY "0\Comando invalido"
               DISPLAY "#Digite HELP para ajuda"
               PERFORM WAIT-CMD
            END-IF.

         PROCESS-LOG.
            DISPLAY "Digite dados do log (separados por ;):"
            ACCEPT WS-INPUT
            
            UNSTRING WS-INPUT DELIMITED BY ";"
                INTO WS-SESSION-ID
                     WS-COMPONENT
                     WS-ACTION
                     WS-STATUS
                     WS-RESPONSE-TIME
                     WS-MESSAGE
                     WS-ENDPOINT
                     WS-METHOD
                     WS-VALUE
            END-UNSTRING

            MOVE WS-RESPONSE-TIME TO WS-EDITED-RESPONSE
            MOVE WS-VALUE TO WS-EDITED-VALUE

      *    Normaliza dados removendo espaços em branco
           MOVE SPACES TO WS-NORM-SESSION-ID
           MOVE SPACES TO WS-NORM-COMPONENT
           MOVE SPACES TO WS-NORM-ACTION
           MOVE SPACES TO WS-NORM-STATUS
           MOVE SPACES TO WS-NORM-MESSAGE
           MOVE SPACES TO WS-NORM-ENDPOINT
           MOVE SPACES TO WS-NORM-METHOD
           
           PERFORM VARYING WS-IDX FROM 1 BY 1 
             UNTIL WS-SESSION-ID(WS-IDX:1) = SPACE
             OR WS-IDX > 10
               MOVE WS-SESSION-ID(WS-IDX:1) 
                 TO WS-NORM-SESSION-ID(WS-IDX:1)
           END-PERFORM
           
           PERFORM VARYING WS-IDX FROM 1 BY 1 
             UNTIL WS-COMPONENT(WS-IDX:1) = SPACE
             OR WS-IDX > 10
               MOVE WS-COMPONENT(WS-IDX:1) 
                 TO WS-NORM-COMPONENT(WS-IDX:1)
           END-PERFORM
           
           PERFORM VARYING WS-IDX FROM 1 BY 1 
             UNTIL WS-ACTION(WS-IDX:1) = SPACE
             OR WS-IDX > 20
               MOVE WS-ACTION(WS-IDX:1) 
                 TO WS-NORM-ACTION(WS-IDX:1)
           END-PERFORM
           
           PERFORM VARYING WS-IDX FROM 1 BY 1 
             UNTIL WS-STATUS(WS-IDX:1) = SPACE
             OR WS-IDX > 10
               MOVE WS-STATUS(WS-IDX:1) 
                 TO WS-NORM-STATUS(WS-IDX:1)
           END-PERFORM
           
           PERFORM VARYING WS-IDX FROM 1 BY 1 
             UNTIL WS-MESSAGE(WS-IDX:1) = SPACE
             OR WS-IDX > 100
               MOVE WS-MESSAGE(WS-IDX:1) 
                 TO WS-NORM-MESSAGE(WS-IDX:1)
           END-PERFORM
           
           PERFORM VARYING WS-IDX FROM 1 BY 1 
             UNTIL WS-ENDPOINT(WS-IDX:1) = SPACE
             OR WS-IDX > 50
               MOVE WS-ENDPOINT(WS-IDX:1) 
                 TO WS-NORM-ENDPOINT(WS-IDX:1)
           END-PERFORM
           
           PERFORM VARYING WS-IDX FROM 1 BY 1 
             UNTIL WS-METHOD(WS-IDX:1) = SPACE
             OR WS-IDX > 6
               MOVE WS-METHOD(WS-IDX:1) 
                 TO WS-NORM-METHOD(WS-IDX:1)
           END-PERFORM

            DISPLAY "log\" WS-SESSION-ID ";" WS-COMPONENT ";" 
                    WS-ACTION ";" WS-STATUS ";" WS-EDITED-RESPONSE ";"
                    WS-MESSAGE ";" WS-ENDPOINT ";" WS-METHOD ";"
                    WS-EDITED-VALUE

      *    Tenta inserir apenas na tabela de teste
OCESQL*     EXEC SQL
OCESQL*        INSERT INTO log_cobol_test 
OCESQL*        (session_id, response_time, value_processed,
OCESQL*        component, action, status, message, 
OCESQL*        endpoint, method, created_at)
OCESQL*        VALUES
OCESQL*        (:WS-NORM-SESSION-ID, :WS-RESPONSE-TIME, :WS-VALUE, 
OCESQL*        :WS-COMPONENT, :WS-ACTION, :WS-STATUS, :WS-MESSAGE, 
OCESQL*        :WS-ENDPOINT, :WS-METHOD, now())
OCESQL*     END-EXEC
OCESQL     CALL "OCESQLStartSQL"
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetSQLParams" USING
OCESQL          BY VALUE 16
OCESQL          BY VALUE 10
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE WS-NORM-SESSION-ID
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetSQLParams" USING
OCESQL          BY VALUE 1
OCESQL          BY VALUE 6
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE WS-RESPONSE-TIME
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetSQLParams" USING
OCESQL          BY VALUE 1
OCESQL          BY VALUE 12
OCESQL          BY VALUE -2
OCESQL          BY REFERENCE WS-VALUE
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetSQLParams" USING
OCESQL          BY VALUE 16
OCESQL          BY VALUE 10
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE WS-COMPONENT
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetSQLParams" USING
OCESQL          BY VALUE 16
OCESQL          BY VALUE 20
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE WS-ACTION
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetSQLParams" USING
OCESQL          BY VALUE 16
OCESQL          BY VALUE 10
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE WS-STATUS
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetSQLParams" USING
OCESQL          BY VALUE 16
OCESQL          BY VALUE 100
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE WS-MESSAGE
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetSQLParams" USING
OCESQL          BY VALUE 16
OCESQL          BY VALUE 50
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE WS-ENDPOINT
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetSQLParams" USING
OCESQL          BY VALUE 16
OCESQL          BY VALUE 6
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE WS-METHOD
OCESQL     END-CALL
OCESQL     CALL "OCESQLExecParams" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE SQ0001
OCESQL          BY VALUE 9
OCESQL     END-CALL
OCESQL     CALL "OCESQLEndSQL"
OCESQL     END-CALL

            IF SQLCODE NOT = ZERO
               DISPLAY "0\DB_ERROR"
               DISPLAY "#Erro ao inserir log no banco"
               DISPLAY "#SQLCODE: " SQLCODE
               DISPLAY "#Dados inseridos:"
               DISPLAY "#  Session ID: " WS-NORM-SESSION-ID
               DISPLAY "#  Response:   " WS-RESPONSE-TIME
               DISPLAY "#  Value:      " WS-VALUE
            ELSE
OCESQL*        EXEC SQL
OCESQL*           COMMIT
OCESQL*        END-EXEC
OCESQL     CALL "OCESQLStartSQL"
OCESQL     END-CALL
OCESQL     CALL "OCESQLExec" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE "COMMIT" & x"00"
OCESQL     END-CALL
OCESQL     CALL "OCESQLEndSQL"
OCESQL     END-CALL
               IF SQLCODE NOT = ZERO
                  DISPLAY "0\DB_ERROR"
                  DISPLAY "#Erro ao confirmar inserção do log"
                  DISPLAY "#SQLCODE: " SQLCODE
               ELSE
                  DISPLAY "1\DB_SUCCESS"
                  DISPLAY "#Log inserido com sucesso"
               END-IF
            END-IF.

         FIM-PROGRAMA.
            IF WS-DB-STARTED = "S"
OCESQL*        EXEC SQL
OCESQL*           DISCONNECT ALL
OCESQL*        END-EXEC
OCESQL     CALL "OCESQLDisconnect" USING
OCESQL          BY REFERENCE SQLCA
OCESQL     END-CALL
               DISPLAY "0\STATUS" 
               DISPLAY "#Conexao com o banco finalizada"
            END-IF
            
            STOP RUN. 