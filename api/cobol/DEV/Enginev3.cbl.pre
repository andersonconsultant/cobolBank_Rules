      ******************************************************************
      *  Open Cobol ESQL (Ocesql) Test Program
      *
      *  Simple SELECT saldo() execution
      ******************************************************************
         IDENTIFICATION              DIVISION.
      ******************************************************************
         PROGRAM-ID.                 sSALDO.
         AUTHOR.                     TSH.
         DATE-WRITTEN.               2024-03-20.

      ******************************************************************
         ENVIRONMENT                 DIVISION.
      ******************************************************************
         CONFIGURATION              SECTION.
         SPECIAL-NAMES.
            DECIMAL-POINT IS COMMA.

      ******************************************************************
         DATA                        DIVISION.
      ******************************************************************
         WORKING-STORAGE             SECTION.
OCESQL*  EXEC SQL BEGIN DECLARE SECTION END-EXEC.
         01  DBNAME                  PIC  X(30) VALUE SPACE.
         01  USERNAME                PIC  X(30) VALUE SPACE.
         01  PASSWD                  PIC  X(10) VALUE SPACE.
         01  SALDO-RESULT           PIC 9(10)V99 VALUE 0.
         01  TRANSFER-RESULT        PIC X(500) VALUE SPACES.
         01  WS-CONN-PID            PIC 9(5) VALUE 0.
         01  SQLCODE-PASS       PIC S9(9) COMP-5.
         01  SQLSTATE-PASS      PIC X(5).
         01  SQLERRMC-PASS      PIC X(70).

OCESQL*  EXEC SQL END DECLARE SECTION END-EXEC.

         01  WS-CMD                 PIC X(10) VALUE SPACE.
         01  WS-DB-STARTED          PIC X(1)  VALUE "N".

OCESQL*  EXEC SQL INCLUDE SQLCA END-EXEC.
OCESQL     copy "sqlca.cbl".

      ******************************************************************
OCESQL*
OCESQL 01  SQ0001.
OCESQL     02  FILLER PIC X(023) VALUE "SELECT pg_backend_pid()".
OCESQL     02  FILLER PIC X(1) VALUE X"00".
OCESQL*
OCESQL 01  SQ0002.
OCESQL     02  FILLER PIC X(055) VALUE "INSERT INTO sessions_pool(id) "
OCESQL  &  "VALUES (pg_backend_pid())".
OCESQL     02  FILLER PIC X(1) VALUE X"00".
OCESQL*
OCESQL 01  SQ0003.
OCESQL     02  FILLER PIC X(014) VALUE "SELECT saldo()".
OCESQL     02  FILLER PIC X(1) VALUE X"00".
OCESQL*
OCESQL 01  SQ0004.
OCESQL     02  FILLER PIC X(014) VALUE "SELECT saldo()".
OCESQL     02  FILLER PIC X(1) VALUE X"00".
OCESQL*
OCESQL 01  SQ0005.
OCESQL     02  FILLER PIC X(021) VALUE "SELECT get_transfer()".
OCESQL     02  FILLER PIC X(1) VALUE X"00".
OCESQL*
OCESQL 01  SQ0006.
OCESQL     02  FILLER PIC X(014) VALUE "DISCONNECT ALL".
OCESQL     02  FILLER PIC X(1) VALUE X"00".
OCESQL*
         PROCEDURE                   DIVISION.
      ******************************************************************
         MAIN-RTN.
            PERFORM WAIT-CMD.

         MENU-HELP.
            DISPLAY SPACE
            DISPLAY "=== COMANDOS DISPONIVEIS ==="
            DISPLAY "START   : Inicia conexao com o banco"
            DISPLAY "SALDO   : Consulta saldo atual"
            DISPLAY "EXTRATO : Lista ultimas transacoes"
            DISPLAY "HELP    : Mostra este menu de ajuda"
            DISPLAY "EXIT    : Finaliza o programa"
            DISPLAY "========================="
            DISPLAY SPACE
            PERFORM WAIT-CMD.

         START-SQL.
      *    CONNECT
            MOVE "cobolbd"   TO   DBNAME
            MOVE "server"    TO   USERNAME
            MOVE "pwdbd123" TO   PASSWD
            
OCESQL*     EXEC SQL
OCESQL*        CONNECT :USERNAME IDENTIFIED BY :PASSWD USING :DBNAME 
OCESQL*     END-EXEC
OCESQL     CALL "OCESQLConnect" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE USERNAME
OCESQL          BY VALUE 30
OCESQL          BY REFERENCE PASSWD
OCESQL          BY VALUE 10
OCESQL          BY REFERENCE DBNAME
OCESQL          BY VALUE 30
OCESQL     END-CALL
            
            IF SQLCODE NOT = ZERO
            MOVE SQLCODE TO SQLCODE-PASS
            MOVE SQLSTATE TO SQLSTATE-PASS
            MOVE SQLERRMC TO SQLERRMC-PASS
            CALL 'util' USING SQLCODE-PASS, SQLSTATE-PASS, SQLERRMC-PASS
            ELSE
               MOVE "S" TO WS-DB-STARTED
OCESQL*           EXEC SQL
OCESQL*           SELECT pg_backend_pid() INTO :WS-CONN-PID
OCESQL*           END-EXEC
OCESQL     CALL "OCESQLStartSQL"
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 1
OCESQL          BY VALUE 5
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE WS-CONN-PID
OCESQL     END-CALL
OCESQL     CALL "OCESQLExecSelectIntoOne" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE SQ0001
OCESQL          BY VALUE 0
OCESQL          BY VALUE 1
OCESQL     END-CALL
OCESQL     CALL "OCESQLEndSQL"
OCESQL     END-CALL

                  IF SQLCODE NOT = ZERO
                  MOVE SQLCODE TO SQLCODE-PASS
                  MOVE SQLSTATE TO SQLSTATE-PASS
                  MOVE SQLERRMC TO SQLERRMC-PASS
                  CALL 'util' USING SQLCODE-PASS, SQLSTATE-PASS, SQLERRMC-PASS
                  ELSE
                     DISPLAY "1\CONNECTED\" WS-CONN-PID
                     DISPLAY "#Conexao com o banco iniciada com sucesso"
                  END-IF
      *     INSERT ID           
OCESQL*           EXEC SQL
OCESQL*           INSERT INTO sessions_pool(id)
OCESQL*           VALUES (pg_backend_pid())
OCESQL*           END-EXEC
OCESQL     CALL "OCESQLExec" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE SQ0002
OCESQL     END-CALL
OCESQL*           EXEC SQL
OCESQL*           COMMIT
OCESQL*           END-EXEC
OCESQL     CALL "OCESQLStartSQL"
OCESQL     END-CALL
OCESQL     CALL "OCESQLExec" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE "COMMIT" & x"00"
OCESQL     END-CALL
OCESQL     CALL "OCESQLEndSQL"
OCESQL     END-CALL

                  IF SQLCODE NOT = ZERO
                  MOVE SQLCODE TO SQLCODE-PASS
                  MOVE SQLSTATE TO SQLSTATE-PASS
                  MOVE SQLERRMC TO SQLERRMC-PASS
                  CALL 'util' USING SQLCODE-PASS, SQLSTATE-PASS, SQLERRMC-PASS
                  ELSE
                     DISPLAY "1\INSERT #ID IS ON BANK!" WS-CONN-PID
                  END-IF

            END-IF
            PERFORM WAIT-CMD.

         WAIT-CMD.
            DISPLAY "#Digite o comando: - Digite HELP para ajuda"
            ACCEPT WS-CMD
            
            IF WS-CMD = "START"
               IF WS-DB-STARTED = "S"
                  DISPLAY "Banco ja esta conectado"
                  PERFORM WAIT-CMD
               ELSE
                  PERFORM START-SQL
               END-IF
            ELSE IF WS-CMD = "SALDO"
               IF WS-DB-STARTED = "N"
                  DISPLAY "Banco nao conectado"
                  DISPLAY "Digite START primeiro"
                  PERFORM WAIT-CMD
               ELSE
                  PERFORM GET-SALDO
                  PERFORM WAIT-CMD
               END-IF
            ELSE IF WS-CMD = "EXTRATO"
               IF WS-DB-STARTED = "N"
                  DISPLAY "Banco nao conectado"
                  DISPLAY "Digite START primeiro"
                  PERFORM WAIT-CMD
               ELSE
                  PERFORM GET-EXTRATO
                  PERFORM WAIT-CMD

      * TEST INIT
            ELSE IF WS-CMD = "UPDATE"
               IF WS-DB-STARTED = "N"
               DISPLAY "Banco nao conectado"
               PERFORM UPD-SQL
               PERFORM WAIT-CMD            

               ELSE 
                  PERFORM UPD-SQL
                  PERFORM WAIT-CMD
      * TEST END
            ELSE IF WS-CMD = "HELP"
               PERFORM MENU-HELP
            ELSE IF WS-CMD = "EXIT" OR WS-CMD = "QUIT"
               PERFORM FIM-PROGRAMA
            ELSE
               DISPLAY "0\Comando invalido"
               DISPLAY "#Digite HELP para ajuda"
               PERFORM WAIT-CMD
            END-IF.

         UPD-SQL.
      *    Execute UPDATE updated_at()
OCESQL*     EXEC SQL
OCESQL*        SELECT saldo() INTO :SALDO-RESULT
OCESQL*     END-EXEC
OCESQL     CALL "OCESQLStartSQL"
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 1
OCESQL          BY VALUE 12
OCESQL          BY VALUE -2
OCESQL          BY REFERENCE SALDO-RESULT
OCESQL     END-CALL
OCESQL     CALL "OCESQLExecSelectIntoOne" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE SQ0003
OCESQL          BY VALUE 0
OCESQL          BY VALUE 1
OCESQL     END-CALL
OCESQL     CALL "OCESQLEndSQL"
OCESQL     END-CALL

            IF SQLCODE NOT = ZERO
            MOVE SQLCODE TO SQLCODE-PASS
            MOVE SQLSTATE TO SQLSTATE-PASS
            MOVE SQLERRMC TO SQLERRMC-PASS
            CALL 'util' USING SQLCODE-PASS, SQLSTATE-PASS, SQLERRMC-PASS
            ELSE
               DISPLAY "saldo\" SALDO-RESULT
            END-IF.
      
         GET-SALDO.
      *    Execute SELECT saldo()
OCESQL*     EXEC SQL
OCESQL*        SELECT saldo() INTO :SALDO-RESULT
OCESQL*     END-EXEC
OCESQL     CALL "OCESQLStartSQL"
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 1
OCESQL          BY VALUE 12
OCESQL          BY VALUE -2
OCESQL          BY REFERENCE SALDO-RESULT
OCESQL     END-CALL
OCESQL     CALL "OCESQLExecSelectIntoOne" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE SQ0004
OCESQL          BY VALUE 0
OCESQL          BY VALUE 1
OCESQL     END-CALL
OCESQL     CALL "OCESQLEndSQL"
OCESQL     END-CALL

            IF SQLCODE NOT = ZERO
            MOVE SQLCODE TO SQLCODE-PASS
            MOVE SQLSTATE TO SQLSTATE-PASS
            MOVE SQLERRMC TO SQLERRMC-PASS
            CALL 'util' USING SQLCODE-PASS, SQLSTATE-PASS, SQLERRMC-PASS
            ELSE
               DISPLAY "saldo\" SALDO-RESULT
            END-IF.

         GET-EXTRATO.
      *    Execute SELECT get_transfer()
OCESQL*     EXEC SQL
OCESQL*        SELECT get_transfer() INTO :TRANSFER-RESULT
OCESQL*     END-EXEC
OCESQL     CALL "OCESQLStartSQL"
OCESQL     END-CALL
OCESQL     CALL "OCESQLSetResultParams" USING
OCESQL          BY VALUE 16
OCESQL          BY VALUE 500
OCESQL          BY VALUE 0
OCESQL          BY REFERENCE TRANSFER-RESULT
OCESQL     END-CALL
OCESQL     CALL "OCESQLExecSelectIntoOne" USING
OCESQL          BY REFERENCE SQLCA
OCESQL          BY REFERENCE SQ0005
OCESQL          BY VALUE 0
OCESQL          BY VALUE 1
OCESQL     END-CALL
OCESQL     CALL "OCESQLEndSQL"
OCESQL     END-CALL

            IF SQLCODE NOT = ZERO
            MOVE SQLCODE TO SQLCODE-PASS
            MOVE SQLSTATE TO SQLSTATE-PASS
            MOVE SQLERRMC TO SQLERRMC-PASS
            CALL 'util' USING SQLCODE-PASS, SQLSTATE-PASS, SQLERRMC-PASS
            ELSE
               DISPLAY "transfer\" TRANSFER-RESULT
            END-IF.

         FIM-PROGRAMA.
      *    DISCONNECT from database
            IF WS-DB-STARTED = "S"
OCESQL*        EXEC SQL
OCESQL*              DISCONNECT ALL
OCESQL*        END-EXEC
OCESQL     CALL "OCESQLDisconnect" USING
OCESQL          BY REFERENCE SQLCA
OCESQL     END-CALL
               DISPLAY "1\DISCONNECTED" 
               DISPLAY "#Conexao com o banco finalizada"
            END-IF
            
            STOP RUN.
